---
import Layout from '../layouts/Layout.astro';
import WeatherDisplay from '../components/WeatherDisplay.astro';
import { getCoordinates, getWeatherData } from '../utils/api';
import { processWeatherData } from '../utils/weather';

const defaultCity = "Madrid";

let currentWeather;
let error = null;

try {
  const { latitude, longitude, name } = await getCoordinates(defaultCity);
  const weatherData = await getWeatherData(latitude, longitude);
  currentWeather = processWeatherData(weatherData, name);
} catch (e) {
  error = e.message;
  console.error('Error fetching initial weather data:', e);
}
---

<Layout title="Weather App">
  <main class="container mx-auto px-8 pt-8">
    <h1 class="text-4xl font-medium text-center mb-8">WeatherMine</h1>
    <form id="search-form" class="mb-8">
      <div class="flex justify-center space-x-4">
        <input
          type="text"
          id="city-input"
          placeholder="Enter city or village"
          class="border p-2 rounded flex-grow max-w-md bg-zinc-200 dark:bg-gray-800"
          value={defaultCity}
        />
        <button type="submit" class="bg-emerald-700 text-zinc-100 hover:bg-emerald-800 transition ease-in-out duration-300 px-8 py-2 rounded">
          Buscar
        </button>
      </div>
    </form>
    <div id="weather-container">
      {error ? (
        <p class="text-red-500 text-center">{error}</p>
      ) : (
        <WeatherDisplay weatherData={currentWeather} />
      )}
    </div>
  </main>
</Layout>

<script>
  import { getCoordinates, getWeatherData } from '../utils/api';
  import { processWeatherData, getWeatherDescription } from '../utils/weather';

  const form = document.getElementById('search-form');
  const weatherContainer = document.getElementById('weather-container');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const cityInput = document.getElementById('city-input').value;

    try {
      const { latitude, longitude, name } = await getCoordinates(cityInput);
      const weatherData = await getWeatherData(latitude, longitude);
      const currentWeather = processWeatherData(weatherData, name);

      weatherContainer.innerHTML = `
        <div class="bg-white p-6 rounded-lg shadow-lg">
          <h2 class="text-2xl font-bold mb-4">Current Weather in ${currentWeather.city}</h2>
          <p class="text-xl">Temperature: ${currentWeather.temperature}Â°C</p>
          <p class="text-xl">Condition: ${getWeatherDescription(currentWeather.weatherCode)}</p>
          <p class="text-xl">Wind Speed: ${currentWeather.windSpeed} km/h</p>
          <h3 class="text-xl font-semibold mt-4 mb-2">Hourly Precipitation Probability</h3>
          <div class="grid grid-cols-6 gap-2">
            ${currentWeather.hourlyTime.map((time, index) => `
              <div class="text-center">
                <p class="text-sm">${new Date(time).getHours()}:00</p>
                <p class="font-bold">${currentWeather.hourlyPrecipitation[index]}%</p>
              </div>
            `).join('')}
          </div>
        </div>
      `;
    } catch (error) {
      console.error('Error fetching weather data:', error);
      weatherContainer.innerHTML = `<p class="text-red-500 text-center">${error.message}</p>`;
    }
  });
</script>